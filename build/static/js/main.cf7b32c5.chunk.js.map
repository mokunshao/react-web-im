{"version":3,"sources":["components/tooltip/Tooltip.js","data/actions/actionTypes.js","components/chat/dialog/Dialog.js","components/sign/SignUp.js","data/token.js","components/sign/Login.js","components/chat/sidebar/Sidebar.js","components/chat/roster/Roster.js","components/chat/panel/Panel.js","components/chat/Chat.js","App.js","serviceWorker.js","data/reducers/sign.js","data/reducers/session.js","data/reducers/message.js","data/createStore.js","index.js"],"names":["newDiv","timer","Tooltip","react_default","a","createElement","className","this","props","type","content","Component","close","ReactDOM","unmountComponentAtNode","parentNode","removeChild","defaultProps","time","components_tooltip_Tooltip","show","clearTimeout","document","body","appendChild","render","Tooltip_Tooltip","setTimeout","REG_STATE_CHANGE","SET_CURRENT_SESSION","SET_ROSTER","SAVE_MESSAGES","SignUp","username","_this","refs","value","trim","password","nickname","signUping","options","appKey","WebIM","config","appkey","apiUrl","apiURL","success","signUpSuccess","error","signUpError","conn","registerUser","ref","autoFocus","placeholder","onClick","Link","to","signUpState","SignUp_Loading","Loading","connect","state","sign","dispatch","payload","token","getToken","setToken","newToken","Login","login","user","pwd","history","push","open","Dialog","closeDialog","addFriend","subscribe","alert","acceptFriend","subscribed","e","from","message","rejectFriend","unsubscribed","dialog","showDialog","Dialog_Dialog","Sidebar","showSetting","aria-hidden","xlinkHref","style","display","id","viewBox","d","fill","Roster","roster","length","map","item","url","concat","name","isSelected","currentSession","key","setCurrentSession","messageList","data","session","Panel","sendMessage","inputMessage","getUniqueId","msg","set","roomType","serverMsgId","saveSentMessage2MessageList","fail","chatType","send","sendMessage2","keyCode","messageListContent","scrollTop","offsetHeight","_this2","onKeyUp","Fragment","Chat","listen","onOpened","getRoster","filter","subscription","setRoster","onRoster","onPresence","onTextMessage","match","params","friendName","prevProps","nextProps","sidebar_Sidebar","roster_Roster","panel_Panel","App","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","signReducer","arguments","undefined","action","Object","objectSpread","sessionReducer","toConsumableArray","messageReducer","currentMessage","fn1","list","reducers","combineReducers","middleware","ReduxThunk","store","applyMiddleware","apply","createStore","finalCreateStore","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf7b32c5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Tooltip.scss\";\r\n\r\nclass Tooltip extends Component {\r\n  static defaultProps = {\r\n    time: 3000, // 三秒后消失\r\n    type: \"success\",\r\n    content: \"默认消息\"\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"tooltip\">\r\n        <span className={this.props.type}>{this.props.content}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet newDiv, timer;\r\n\r\nfunction show(props) {\r\n  if (newDiv) {\r\n    close();\r\n  }\r\n  if (timer) {\r\n    clearTimeout(timer);\r\n  }\r\n  newDiv = document.createElement(\"div\");\r\n  document.body.appendChild(newDiv);\r\n  ReactDOM.render(<Tooltip {...props} />, newDiv);\r\n  timer = setTimeout(() => {\r\n    close();\r\n  }, props.time || 3000);\r\n}\r\n\r\nfunction close() {\r\n  if (newDiv) {\r\n    ReactDOM.unmountComponentAtNode(newDiv);\r\n    newDiv.parentNode.removeChild(newDiv);\r\n    newDiv = null;\r\n  }\r\n}\r\n\r\nexport default { show: show, close: close };\r\n","export function createAction(actiontype, ...params) {\r\n  return (...args) => {\r\n    let action = { type: actiontype, payload: {} };\r\n    params.forEach((item, index) => {\r\n      action.payload[item] = args[index];\r\n    });\r\n    return action\r\n  };\r\n}\r\n\r\n// 使用范例\r\n// createAction('actionTypes','key')('value')\r\n// createAction('actionTypes','key1','key2')('value1','value2')\r\n\r\nexport const REG_STATE_CHANGE = \"reg_state_change\";\r\n\r\nexport const SET_CURRENT_SESSION = \"set_currrnet_session\";\r\n\r\nexport const SET_ROSTER = \"set_roster\";\r\n\r\nexport const SAVE_MESSAGES = \"save_messages\";\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./dialog.scss\";\r\n\r\nclass Dialog extends Component {\r\n  closeDialog = () => {\r\n    if (newDiv) {\r\n      ReactDOM.unmountComponentAtNode(newDiv);\r\n      newDiv.parentNode.removeChild(newDiv);\r\n      newDiv = null;\r\n    }\r\n  };\r\n  addFriend = () => {\r\n    if (this.refs.username.value.trim()) {\r\n      conn.subscribe({\r\n        to: this.refs.username.value.trim(),\r\n      });\r\n      this.closeDialog();\r\n    } else {\r\n      alert(\"请输入用户名\");\r\n    }\r\n  };\r\n  acceptFriend = () => {\r\n    conn.subscribed({\r\n      to: this.props.e.from,\r\n      message: \"[resp:true]\"\r\n    });\r\n    conn.subscribe({\r\n      to: this.props.e.from,\r\n      message: \"[resp:true]\"\r\n    });\r\n    this.closeDialog();\r\n  };\r\n  rejectFriend = () => {\r\n    conn.unsubscribed({\r\n      to: this.props.e.from,\r\n      message: \"rejectAddFriend\"\r\n    });\r\n    this.closeDialog();\r\n  };\r\n  render() {\r\n    let dialog = null;\r\n    switch (this.props.type) {\r\n      case 1:\r\n        dialog = (\r\n          <div className=\"dialog\">\r\n            <div className=\"mask\" onClick={this.closeDialog} />\r\n            <div className=\"dialogContent\">\r\n              <span className=\"cancel\" onClick={this.closeDialog}>\r\n                关闭\r\n              </span>\r\n              <div className=\"title\">添加好友</div>\r\n              <div>\r\n                <input ref=\"username\" type=\"text\" placeholder=\"输入用户名\" />\r\n              </div>\r\n              <div>\r\n                <button onClick={this.addFriend}>确定</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case 2:\r\n        dialog = (\r\n          <div className=\"dialog\">\r\n            <div className=\"mask\" onClick={this.closeDialog} />\r\n            <div className=\"dialogContent\">\r\n              <span className=\"cancel\" onClick={this.closeDialog}>\r\n                关闭\r\n              </span>\r\n              <div className=\"title\">添加好友</div>\r\n              <div>{this.props.e.from}请求添加好友。</div>\r\n              <div>\r\n                <button className=\"agree\" onClick={this.acceptFriend}>\r\n                  接受\r\n                </button>\r\n                <button onClick={this.rejectFriend}>拒绝</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        dialog = (\r\n          <div className=\"dialog\">\r\n            <div className=\"mask\" onClick={this.closeDialog} />\r\n            <div className=\"dialogContent\">\r\n              <span className=\"cancel\" onClick={this.closeDialog}>\r\n                关闭\r\n              </span>\r\n              <div className=\"title\">添加好友</div>\r\n              <div>\r\n                <input ref=\"username\" type=\"text\" placeholder=\"输入用户名\" />\r\n              </div>\r\n              <div>\r\n                <button onClick={this.addFriend}>确定</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n    }\r\n    return <div>{dialog}</div>;\r\n  }\r\n}\r\n\r\nlet newDiv;\r\n\r\nexport function showDialog(props) {\r\n  newDiv = document.createElement(\"div\");\r\n  document.body.appendChild(newDiv);\r\n  ReactDOM.render(<Dialog {...props} />, newDiv);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./sign.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport Tooltip from \"../tooltip/Tooltip\";\r\nimport { REG_STATE_CHANGE } from '../../data/actions/actionTypes'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass SignUp extends Component {\r\n  SignUp = () => {\r\n    let username = this.refs.username.value.trim();\r\n    let password = this.refs.password.value.trim();\r\n    let nickname = this.refs.nickname.value.trim();\r\n    if (!username || !password || !nickname) {\r\n      Tooltip.show({ content: \"账号密码昵称不能为空\", type: \"error\" });\r\n      return false;\r\n    }\r\n    this.props.signUping();\r\n    let options = {\r\n      username: username,\r\n      password: password,\r\n      nickname: nickname,\r\n      appKey: WebIM.config.appkey,\r\n      apiUrl: WebIM.config.apiURL,\r\n      success: () => {\r\n        this.props.signUpSuccess();\r\n        Tooltip.show({ content: \"注册成功\", type: \"success\" });\r\n      },\r\n      error: () => {\r\n        this.props.signUpError();\r\n        Tooltip.show({ content: \"注册失败\", type: \"error\" });\r\n      }\r\n    };\r\n    conn.registerUser(options);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"form\">\r\n          <h2>注册</h2>\r\n          <div className=\"formRow\">\r\n            <input\r\n              ref=\"username\"\r\n              type=\"text\"\r\n              autoFocus=\"autofocus\"\r\n              placeholder=\"用户名\"\r\n            />\r\n          </div>\r\n          <div className=\"formRow\">\r\n            <input ref=\"password\" type=\"password\" placeholder=\"密码\" />\r\n          </div>\r\n          <div className=\"formRow\">\r\n            <input ref=\"nickname\" type=\"text\" placeholder=\"昵称\" />\r\n          </div>\r\n          <div className=\"formRow\">\r\n            <button onClick={this.SignUp}>注册</button>\r\n          </div>\r\n          <p>\r\n            已有账户？\r\n            <Link to=\"/login\">登录</Link>\r\n          </p>\r\n        </div>\r\n        {this.props.signUpState === 1 ? <Loading /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return <div className=\"loading\">正在加载中</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    signUpState: state.sign.signUpState\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUping: () => {\r\n      dispatch({ type: REG_STATE_CHANGE, payload: { signUpState: 1 } });\r\n    },\r\n    signUpSuccess: () => {\r\n      dispatch({ type: REG_STATE_CHANGE, payload: { signUpState: 2 } });\r\n    },\r\n    signUpError: () => {\r\n      dispatch({ type: REG_STATE_CHANGE, payload: { signUpState: 3 } });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","let token = null;\r\n\r\nexport const getToken = () => {\r\n  return token;  \r\n};\r\nexport const setToken = newToken => {\r\n  token = newToken;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./sign.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tooltip from \"../tooltip/Tooltip\";\r\nimport { setToken } from \"../../data/token\";\r\n\r\nclass Login extends Component {\r\n  login = () => {\r\n    let username = this.refs.username.value.trim();\r\n    let password = this.refs.password.value.trim();\r\n    if (!username || !password) {\r\n      Tooltip.show({ content: \"账号密码不能为空\", type: \"error\" });\r\n      return false;\r\n    }\r\n    let options = {\r\n      apiUrl: WebIM.config.apiURL,\r\n      user: username,\r\n      pwd: password,\r\n      appKey: WebIM.config.appkey,\r\n      success: token => {\r\n        setToken(token);\r\n        Tooltip.show({ content: \"登录成功\", type: \"success\" });\r\n        this.props.history.push(\"/chat\");\r\n      },\r\n      error: () => {\r\n        Tooltip.show({ content: \"登录失败\", type: \"error\" });\r\n      }\r\n    };\r\n    conn.open(options);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"form\">\r\n          <h2>登录</h2>\r\n          <div className=\"formRow\">\r\n            <input\r\n              ref=\"username\"\r\n              type=\"text\"\r\n              autoFocus=\"autofocus\"\r\n              placeholder=\"用户名\"\r\n            />\r\n          </div>\r\n          <div className=\"formRow\">\r\n            <input ref=\"password\" type=\"password\" placeholder=\"密码\" />\r\n          </div>\r\n          <div className=\"formRow\">\r\n            <button onClick={this.login}>登录</button>\r\n          </div>\r\n          <p>\r\n            没有账户？<Link to=\"/signup\">注册</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport \"./sidebar.scss\";\r\nimport { showDialog } from \"../dialog/Dialog\";\r\nimport { getToken } from \"../../../data/token\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n  showSetting = () => {\r\n    showDialog({ type: 1 });\r\n  };\r\n  render() {\r\n    let token = getToken();\r\n    let username = token ? token.user.username : \"未登录\";\r\n    return (\r\n      <section className=\"sidebar\">\r\n        <div>\r\n          <div>\r\n            <svg className=\"icon\" aria-hidden=\"true\">\r\n              <use xlinkHref=\"#icon-avatar\" />\r\n            </svg>\r\n          </div>\r\n          <div className=\"username\">{username}</div>\r\n        </div>\r\n        <div>\r\n          <div onClick={this.showSetting}>\r\n            <svg className=\"icon\" aria-hidden=\"true\">\r\n              <use xlinkHref=\"#icon-add\" />\r\n            </svg>\r\n          </div>\r\n          <div>\r\n            <Link\r\n              to=\"/login\"\r\n              onClick={() => {\r\n                conn.close();\r\n              }}\r\n            >\r\n              <svg className=\"icon\" aria-hidden=\"true\">\r\n                <use xlinkHref=\"#icon-quit\" />\r\n              </svg>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <svg style={{ display: \"none\" }}>\r\n          <symbol id=\"icon-avatar\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M510.964926 63.811328c-127.067001 2.704598-233.408981 46.907333-317.233108 130.822534C109.909737 278.547017 65.752028 385.002584 63.051523 512.208754c2.700505 127.20617 46.858214 232.782717 130.680295 316.695872 83.824127 83.916225 190.165084 128.118959 317.233108 130.823558 127.102816-2.704598 232.533031-46.907333 316.355111-130.823558 80.381725-80.500429 124.301004-180.904163 130.139989-301.251112l0-30.889521c-5.838985-120.311133-49.758264-220.750683-130.139989-301.218366C743.497956 110.718661 634.36542 66.436108 510.964926 63.811328L510.964926 63.811328zM786.588357 778.490423c-21.893636-10.499122-45.493124-21.884426-69.124334-24.509207-62.142316-5.28333-100.621698-14.896268-115.500571-29.79356-13.994736-14.895245-20.12434-35.927257-17.502629-63.061244 0.886183-16.635889 5.246491-26.282596 14.881942-30.67872 9.602705-4.363378 20.122293-28.90533 30.611182-72.67623 3.508917-13.156648 7.013741-23.657816 11.373025-31.564903 4.39203-7.875365 11.373025-24.51023 20.125363-51.676963 4.39203-19.260669 4.39203-30.645974-0.853437-33.270754-5.276167-2.623757-8.750291-3.510964-9.636474-2.623757l4.360308-19.293415c2.62171-12.238742 4.39203-27.133987 6.129604-43.769876 5.242398-43.802622-3.508917-81.4695-26.254967-113.000634-22.745027-32.417317-64.73128-49.052183-126.873596-50.824549-55.129598 0.88516-84.003206 22.803355-116.354008 49.937342-35.889395 28.021194-48.14758 65.688071-38.511105 113.886817 7.013741 35.896558 17.501606 65.688071 10.487865 63.063291-0.852414-0.886183-4.360308 0-8.751315 2.623757-4.359284 2.62478-5.244444 14.010085-1.736551 33.270754 9.636474 23.656793 16.616446 40.292682 21.859867 49.052183 5.27719 8.761548 8.751315 20.146852 11.373025 34.189683 8.78406 42.916439 17.502629 66.573231 27.139104 70.935586 9.636474 4.365424 15.766079 15.750729 19.23918 32.419364 4.39203 27.133987-0.852414 48.165999-16.617469 63.061244-15.732309 14.898315-53.358255 24.51023-112.87886 29.759791-21.86089 2.659573-48.114834 13.157671-69.12331 23.657816-67.355037-70.051449-106.751303-162.907277-107.635439-265.408789 2.654456-108.60451 40.280402-198.835557 112.87886-271.544533 72.632227-72.709999 162.764014-110.344131 271.251867-113.001657 108.519576 2.657526 198.621686 40.291658 270.399453 113.001657 72.632227 72.708975 110.224404 162.940023 112.845091 271.544533C893.33966 616.436584 853.943394 709.292412 786.588357 778.490423L786.588357 778.490423z\" />\r\n          </symbol>\r\n          <symbol id=\"icon-quit\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M802.151864 143.681903c31.235972 22.212313 59.004583 47.37867 83.296916 75.486189 24.297287 28.115447 45.120277 58.481358 62.471944 91.10467 17.356621 32.624303 30.543292 67.159173 39.568933 103.600644 9.023659 36.441472 13.533507 73.402205 13.533507 110.886164 0 64.556918-12.320575 125.116314-36.960733 181.691069-24.64214 56.569801-57.962096 105.853091-99.955902 147.845906-41.993807 41.998761-91.277096 75.313762-147.850861 99.955902-56.56881 24.64115-117.134151 36.965688-181.684132 36.965688-63.860275 0-124.078781-12.324539-180.648582-36.965688C297.348198 929.610306 247.89149 896.295305 205.55283 854.296544c-42.343615-41.992816-75.661588-91.276106-99.955902-147.845906C81.300632 649.875883 69.155456 589.315496 69.155456 524.759569c0-36.787316 4.33643-72.883934 13.015236-108.282918 8.678806-35.398984 20.996408-69.064784 36.960733-100.99839 15.968289-31.926669 35.749783-61.774309 59.350427-89.536975 23.599653-27.768611 49.974978-52.757587 79.131921-74.968909 15.272637-11.107643 31.755233-15.271646 49.456708-12.496965 17.696519 2.781618 32.100087 11.454478 43.20872 26.030472 11.108634 14.58194 15.271646 30.890128 12.496965 48.938437-2.781618 18.047318-11.454478 32.622321-26.029481 43.732937-43.732937 31.926669-77.225319 71.144804-100.480119 117.652422-23.247863 46.507618-34.873777 96.483587-34.873777 149.930881 0 45.810975 8.67286 89.026632 26.030472 129.631116 17.351666 40.605475 41.123746 76.003468 71.316239 106.197944 30.201412 30.19943 65.599405 54.144928 106.20488 71.846402 40.606466 17.696519 83.813205 26.548743 129.631116 26.548743 45.810975 0 89.018704-8.852223 129.62517-26.548743 40.606466-17.701474 76.009414-41.646971 106.202899-71.846402 30.195466-30.194475 54.139973-65.592469 71.841447-106.197944 17.702465-40.606466 26.548743-83.820141 26.548743-129.631116 0-54.138982-12.490028-105.333829-37.478013-153.576613-24.99393-48.240803-60.048061-87.977208-105.161402-119.21318-15.272637-10.411991-24.468723-24.643131-27.592221-42.69045-3.12548-18.048309 0.518271-34.708287 10.930261-49.981915 10.411991-14.575003 24.64214-23.427227 42.69045-26.547752C770.229159 129.630125 786.880218 133.269912 802.151864 143.681903L802.151864 143.681903zM534.570544 527.888022c-18.0493 0-33.494364-6.421405-46.336182-19.264214-12.841818-12.840827-19.263223-28.286882-19.263223-46.335191L468.971138 66.634956c0-18.048309 6.420414-33.6658 19.263223-46.853462 12.841818-13.188654 28.286882-19.781494 46.336182-19.781494 18.738016 0 34.529915 6.59284 47.371733 19.781494 12.841818 13.187663 19.262232 28.805153 19.262232 46.853462l0 395.65366c0 18.047318-6.420414 33.493373-19.262232 46.335191C569.100458 521.466617 553.308559 527.888022 534.570544 527.888022L534.570544 527.888022z\" />\r\n          </symbol>\r\n          <symbol id=\"icon-add\" viewBox=\"0 0 1024 1024\">\r\n            <path\r\n              d=\"M512 1024C229.229714 1024 0 794.770286 0 512S229.229714 0 512 0s512 229.229714 512 512-229.229714 512-512 512z m0-928C282.258286 96 96 282.258286 96 512S282.258286 928 512 928 928 741.741714 928 512 741.741714 96 512 96z m208.018286 463.981714h-160v160.036572a48.018286 48.018286 0 0 1-96.036572 0v-160.036572H303.981714a47.981714 47.981714 0 0 1 0-95.963428h160V304.018286a48.018286 48.018286 0 0 1 96.036572 0v160h160a47.981714 47.981714 0 0 1 0 95.963428z\"\r\n              fill=\"\"\r\n            />\r\n          </symbol>\r\n        </svg>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport \"./roster.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { SET_CURRENT_SESSION } from \"../../../data/actions/actionTypes\";\r\n\r\nclass Roster extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"roster\">\r\n        {this.props.roster.length\r\n          ? this.props.roster.map(item => {\r\n              let url = `/chat/${item.name}`;\r\n              let isSelected = item.name === this.props.currentSession;\r\n              return (\r\n                <Link\r\n                  to={url}\r\n                  key={item.name}\r\n                  onClick={() => {\r\n                    this.props.setCurrentSession(item.name);\r\n                  }}\r\n                >\r\n                  <div\r\n                    className={\r\n                      isSelected ? \"friendItem selected\" : \"friendItem\"\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <svg className=\"icon\" aria-hidden=\"true\">\r\n                        <use xlinkHref=\"#icon-avatar\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"username\">{item.name}</div>\r\n                      <div className=\"preview\">\r\n                        {this.props.messageList[item.name]\r\n                          ? this.props.messageList[item.name][\r\n                              this.props.messageList[item.name].length - 1\r\n                            ].data\r\n                          : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            })\r\n          : null}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentSession: state.session.currentSession,\r\n    roster: state.session.roster,\r\n    messageList: state.message.messageList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentSession: currentSession => {\r\n      dispatch({\r\n        type: SET_CURRENT_SESSION,\r\n        payload: { currentSession }\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Roster);\r\n","import React, { Component } from \"react\";\r\nimport \"./panel.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport Tooltip from \"../../tooltip/Tooltip\";\r\nimport { SAVE_MESSAGES } from \"../../../data/actions/actionTypes\";\r\nimport { getToken } from \"../../../data/token\";\r\n\r\nclass Panel extends Component {\r\n  componentDidUpdate() {\r\n    if (this.refs.messageList && this.refs.messageListContent) {\r\n      this.refs.messageList.scrollTop = this.refs.messageListContent.offsetHeight;\r\n    }\r\n  }\r\n  sendMessage = () => {\r\n    let token = getToken();\r\n    let from = token ? token.user.username : \"未登录\";\r\n    if (this.refs.inputMessage.value.trim()) {\r\n      let id = conn.getUniqueId();\r\n      let msg = new WebIM.message(\"txt\", id);\r\n      msg.set({\r\n        msg: this.refs.inputMessage.value.trim(),\r\n        to: this.props.currentSession,\r\n        roomType: false,\r\n        success: (id, serverMsgId) => {\r\n          this.props.saveSentMessage2MessageList(\r\n            serverMsgId,\r\n            from,\r\n            this.props.currentSession,\r\n            this.refs.inputMessage.value.trim()\r\n          );\r\n          this.refs.inputMessage.value = \"\";\r\n        },\r\n        fail: () => {\r\n          Tooltip.show({ content: \"消息发送失败\" });\r\n        }\r\n      });\r\n      msg.body.chatType = \"singleChat\";\r\n      conn.send(msg.body);\r\n    }\r\n  };\r\n  sendMessage2 = e => {\r\n    if (e.keyCode === 13) {\r\n      this.sendMessage();\r\n    }\r\n  };\r\n  render() {\r\n    let content = <section className=\"panel\" />;\r\n    this.props.roster.map(item => {\r\n      if (item.name === this.props.currentSession) {\r\n        content = (\r\n          <section className=\"panel\">\r\n            <div className=\"currentSession\">{this.props.currentSession}</div>\r\n            <div ref=\"messageList\" className=\"messageList\">\r\n              <div ref=\"messageListContent\" className=\"messageListContent\">\r\n                {this.props.messageList[this.props.currentSession]\r\n                  ? this.props.messageList[this.props.currentSession].map(\r\n                      item => {\r\n                        return (\r\n                          <div\r\n                            className={\r\n                              this.props.currentSession === item.from\r\n                                ? \"messageItem\"\r\n                                : \"messageItem reverse\"\r\n                            }\r\n                            key={item.id}\r\n                          >\r\n                            <div>\r\n                              <svg className=\"icon\" aria-hidden=\"true\">\r\n                                <use xlinkHref=\"#icon-avatar\" />\r\n                              </svg>\r\n                            </div>\r\n                            <div>\r\n                              <div className=\"messageAuthor\">{item.from}</div>\r\n                              <div className=\"messageText\">{item.data}</div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    )\r\n                  : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"messageSender\">\r\n              <textarea\r\n                placeholder=\"请输入消息\"\r\n                ref=\"inputMessage\"\r\n                onKeyUp={this.sendMessage2}\r\n              />\r\n              <button onClick={this.sendMessage}>发送</button>\r\n            </div>\r\n          </section>\r\n        );\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    return <>{content}</>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentSession: state.session.currentSession,\r\n    roster: state.session.roster,\r\n    messageList: state.message.messageList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    saveSentMessage2MessageList: (id, from, to, data) => {\r\n      dispatch({ type: SAVE_MESSAGES, payload: { id, from, to, data } });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Panel);\r\n","import React, { Component } from \"react\";\r\nimport { getToken } from \"../../data/token\";\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\nimport Roster from \"./roster/Roster\";\r\nimport Panel from \"./panel/Panel\";\r\nimport \"./chat.scss\";\r\nimport { showDialog } from \"../chat/dialog/Dialog\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  SET_ROSTER,\r\n  SET_CURRENT_SESSION,\r\n  SAVE_MESSAGES\r\n} from \"../../data/actions/actionTypes\";\r\n\r\nclass Chat extends Component {\r\n  componentDidMount() {\r\n    let token = getToken();\r\n    if (!token) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n    conn.listen({\r\n      onOpened: () => {\r\n        conn.getRoster({\r\n          success: roster => {\r\n            roster = roster.filter(item => {\r\n              return item.subscription === \"both\";\r\n            });\r\n            this.props.setRoster(roster);\r\n          }\r\n        });\r\n      },\r\n      onRoster: roster => {\r\n        roster = roster.filter(item => {\r\n          return item.subscription === \"both\";\r\n        });\r\n        this.props.setRoster(roster);\r\n      },\r\n      onPresence: e => {\r\n        if (e.type === \"subscribe\") {\r\n          showDialog({ type: 2, e });\r\n        }\r\n      },\r\n      onTextMessage: e => {\r\n        this.props.saveSentMessage2MessageList(e.id, e.from, e.from, e.data);\r\n      }\r\n    });\r\n    this.props.setCurrentSession(this.props.match.params.friendName);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.match.params.friendName !== this.props.match.params.friendName\r\n    ) {\r\n      this.props.setCurrentSession(this.props.match.params.friendName);\r\n    }\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n    return (\r\n      nextProps.match.params.friendName !== this.props.match.params.friendName\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"chat\">\r\n        <Sidebar />\r\n        <Roster key={this.props.match.params.friendName} />\r\n        <Panel />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    roster: state.session.roster,\r\n    currentSession: state.session.currentSession\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setRoster: roster => {\r\n      dispatch({ type: SET_ROSTER, payload: { roster } });\r\n    },\r\n    setCurrentSession: currentSession => {\r\n      dispatch({\r\n        type: SET_CURRENT_SESSION,\r\n        payload: { currentSession }\r\n      });\r\n    },\r\n    saveSentMessage2MessageList: (id, from, to, data) => {\r\n      dispatch({ type: SAVE_MESSAGES, payload: { id, from, to, data } });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Chat);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport SignUp from \"./components/sign/SignUp\";\nimport Login from \"./components/sign/Login\";\nimport Chat from \"./components/chat/Chat\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path={\"/chat/\"} component={Chat} />\n            <Route path={\"/chat/:friendName\"} component={Chat} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { signUpState: state.sign.signUpState };\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { REG_STATE_CHANGE } from \"../actions/actionTypes\";\r\n\r\nfunction signReducer(\r\n  state = {\r\n    signUpState: 0\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case REG_STATE_CHANGE:\r\n      return { ...state, signUpState: action.payload.signUpState };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default signReducer;\r\n","import { SET_CURRENT_SESSION, SET_ROSTER } from \"../actions/actionTypes\";\r\n\r\nfunction sessionReducer(\r\n  state = {\r\n    currentSession: null,\r\n    roster: [\r\n      // {\r\n      //   jid: \"asemoemo#chatdemoui_test1@easemob.com\",\r\n      //   name: \"test1\",\r\n      //   subscription: \"both\"\r\n      // },\r\n      // {\r\n      //   jid: \"asemoemo#chatdemoui_test1@easemob.com\",\r\n      //   name: \"test2\",\r\n      //   subscription: \"both\"\r\n      // }\r\n    ]\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_SESSION:\r\n      return { ...state, currentSession: action.payload.currentSession };\r\n    case SET_ROSTER:\r\n      return { ...state, roster: [...action.payload.roster] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default sessionReducer;\r\n","import { SAVE_MESSAGES } from \"../actions/actionTypes\";\r\n\r\nfunction messageReducer(\r\n  state = {\r\n    messageList: {\r\n      // test1: [\r\n      //   { id: 1, from: \"test1\", to: \"myname\", data: \"111\" },\r\n      //   { id: 2, from: \"myname\", to: \"myname\", data: \"222\" },\r\n      //   { id: 3, from: \"test1\", to: \"myname\", data: \"333\" }\r\n      // ],\r\n      // test2: [\r\n      //   { id: 1, from: \"test1\", to: \"myname\", data: \"111\" },\r\n      //   { id: 2, from: \"test1\", to: \"myname\", data: \"222\" },\r\n      //   { id: 3, from: \"test1\", to: \"myname\", data: \"333\" }\r\n      // ]\r\n    },\r\n    currentMessage: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case SAVE_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messageList: fn1(\r\n          action.payload.id,\r\n          action.payload.from,\r\n          action.payload.to,\r\n          action.payload.data,\r\n          state.messageList\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default messageReducer;\r\n\r\nfunction fn1(id, from, to, data, messageList) {\r\n  let list = messageList[to] || [];\r\n  list.push({ id, from, to, data });\r\n  messageList[to] = [...list];\r\n  return { ...messageList };\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport signReducer from \"./reducers/sign\";\r\nimport sessionReducer from \"./reducers/session\";\r\nimport messageReducer from \"./reducers/message\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n  sign: signReducer,\r\n  session: sessionReducer,\r\n  message: messageReducer\r\n});\r\n\r\nconst middleware = [ReduxThunk];\r\n\r\nlet finalCreateStore = applyMiddleware(...middleware)(createStore);\r\n\r\nconst store = finalCreateStore(reducers);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./data/createStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}